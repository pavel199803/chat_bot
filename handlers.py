from aiogram import Router, Bot, types, F
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.enums.parse_mode import ParseMode
from aiogram.types import Message, ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup

router = Router()


class Form(StatesGroup):
    start_check = State()
    name = State()
    depart_city = State()
    resort = State()
    quan = State()
    dates = State()
    nights = State()
    budget = State()
    messanger = State()
    numbers = State()
    end = State()
    start_again = State()
    name_alt = State()
    numbers_alt = State()


# name_introduced = 0
# depart_city_introduced = 0
# resort_introduced = 0
# quan_introduced = 0
# dates_introduced = 0
# nights_introduced = 0
# budget_introduced = 0
# messanger_introduced = 0
# numbers_introduced = 0


@router.message(CommandStart())
async def command_start(message: types.Message, state: FSMContext) -> None:
    kb = [
        [
            types.KeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–ºüìû"),
            types.KeyboardButton(text="–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—Éüìã")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await message.answer(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!) –í—ã –ø–æ–ø–∞–ª–∏ –≤ —á–∞—Ç-–±–æ—Ç ¬´–ú–∞—Ä–∫–µ—Ç –°–ª–µ—Ç–∞—Ç—å¬ªüõ´\n\n"
        "–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –±–æ–ª–µ–µ 10 –ª–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Å—Ñ–µ—Ä–µ —Ç—É—Ä–∏–∑–º–∞, –ø–æ—ç—Ç–æ–º—É –º—ã —Ç–æ—á–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑—É–µ–º –¥–ª—è –≤–∞—Å –ª—É—á—à–∏–π –æ—Ç–¥—ã—Ö!üíô\n\n"
        "–ú—ã –≤—Å–µ–≥–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ:\n"
        "‚úîÔ∏è–†–∞—Å—Å–∫–∞–∂–µ–º, –≥–¥–µ –≤—ã–≥–æ–¥–Ω–µ–µ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –∏—Å—Ö–æ–¥—è –∏–∑ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞\n"
        "‚úîÔ∏è–ü–æ–¥–±–µ—Ä–µ–º —Å–∞–º—ã–µ –≤—ã–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Ç–æ–ª—å–∫–æ –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏ –Ω–∞–¥–µ–∂–Ω—ã—Ö —Ç—É—Ä–æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤\n\n"
        "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–π–º—É—Ç –Ω–µ –±–æ–ª–µ–µ 2 –º–∏–Ω—É—Çüëáüèº",
        reply_markup=keyboard
    )
    await state.set_state(Form.start_check)


@router.callback_query(F.data == "inline_manager_pressed")
async def process_buttons_inline_manager_press(callback: types.CallbackQuery, bot: Bot, state: FSMContext):
    await callback.answer("üõ´")
    # inline_start = InlineKeyboardButton(
    #     text="–•–æ—á—É –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É",
    #     callback_data="inline_start_pressed"
    # )
    # keyboard = InlineKeyboardMarkup(inline_keyboard=[[inline_start]])
    await bot.send_message(chat_id=callback.from_user.id,
                           text="–î–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏ –Ω–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è:\n\n"
                                "1Ô∏è‚É£–í–∞—à–µ –∏–º—è. –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –º—ã –º–æ–∂–µ–º –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?"  # reply_markup=keyboard
                           )
    await state.set_state(Form.name_alt)


@router.callback_query(F.data == "inline_start_pressed")
async def process_buttons_inline_start_press(callback: types.CallbackQuery, state: FSMContext, bot: Bot):
    await state.set_state(Form.name)
    await callback.answer("üõ´")
    await bot.send_message(chat_id=callback.from_user.id,
                           text=f"–î–∞–≤–∞–π—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏–ºüëãüèº –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?",
                           )


@router.message(Form.start_check)
async def process_start_check(message: Message, state: FSMContext) -> None:
    await state.update_data(start_check=message.text)
    data = await state.get_data()
    print(data['start_check'])
    if data['start_check'] == "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—Éüìã":
        await state.set_state(Form.name)
        await message.answer("–î–∞–≤–∞–π—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏–ºüëãüèº –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?")
    else:
        # inline_start = InlineKeyboardButton(
        #    text="–•–æ—á—É –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É.",
        #    callback_data="inline_start_pressed"
        # )
        # keyboard = InlineKeyboardMarkup(inline_keyboard=[[inline_start]])
        await message.answer("–î–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏ –Ω–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è:\n\n"
                             "1Ô∏è‚É£–í–∞—à–µ –∏–º—è. –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –º—ã –º–æ–∂–µ–º –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?")  # reply_markup=keyboard
        await state.set_state(Form.name_alt)


@router.message(Form.name_alt)
async def process_name_alt(message: Message, state: FSMContext) -> None:
    await state.update_data(name_alt=message.text)
    data = await state.get_data()
    await message.answer("–°–ø–∞—Å–∏–±–æ!)\n\n"
                         "2Ô∏è‚É£–ê —Ç–∞–∫–∂–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –µ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 8—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö")
    await state.set_state(Form.numbers_alt)


@router.message(Form.numbers_alt)
async def process_numbers_atl(message: types.Message, state: FSMContext, bot: Bot) -> None:
    await state.update_data(numbers_alt=message.text)
    data = await state.get_data()
    if data['numbers_alt'].isdigit() and len(data['numbers_alt']) == 11:
        inline_start = InlineKeyboardButton(
            text="–û—Å—Ç–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω—É –∑–∞—è–≤–∫—É",
            callback_data="inline_start_pressed"
        )
        inline_manager = InlineKeyboardButton(
            text="–°–≤—è–∑–∞—Ç—Å—è —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",
            callback_data="inline_manager_pressed"
        )
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [inline_start],
            [inline_manager]
        ])
        await message.answer("–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä, –º—ã —É–∂–µ –ø–µ—Ä–µ–¥–∞–ª–∏ –µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä—Éüíô\n\n"
                             "–û–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞üìû")
        await message.answer(
            f"–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æüõ´\n\n"
            f"–ú—ã ‚Äì –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –∫–æ–ª–ª–µ–≥, –∞ –ª—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–∞—Ä–∞—é—Ç—Å—è "
            f"<i>—Å–¥–µ–ª–∞—Ç—å –∂–∏–∑–Ω—å –Ω–∞—à–∏—Ö —Ç—É—Ä–∏—Å—Ç–æ–≤ –±–æ–ª–µ–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π. "
            f"–í—ã –º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è –∏ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞—Ç—å –∑–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–¥—ã—Ö))</i> "
            f"–ü–æ—ç—Ç–æ–º—É –º—ã –≥–æ–≤–æ—Ä–∏–º, —á—Ç–æ <b>–≤–∞—à –æ—Ç–¥—ã—Ö –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–µ —Å —Å–∞–º–æ–ª–µ—Ç–∞, –∞ —Å –Ω–∞—Å!</b>\n\n"
            f"–í—Å–µ –≤ –æ–¥–Ω–æ–º –æ–∫–Ω–µ ‚Äî –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–µ —Ç–æ–ª—å–∫–æ —Å –ø–∞–∫–µ—Ç–Ω—ã–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏, –Ω–æ –∏ <u>–æ—Ñ–æ—Ä–º–ª—è–µ–º –≤–∏–∑—ã –ø–æ–¥ —Ç—É—Ä—ã</u>, "
            f"–ø–æ–º–æ–≥–∞–µ–º —Å <u>–ø–æ–∫—É–ø–∫–æ–π –æ—Ç–¥–µ–ª—å–Ω–æ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤</u>, <u>–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è</u>. "
            f"–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º <b>VIP-—Å–µ—Ä–≤–∏—Å</b>‚≠êÔ∏è –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é <b>–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö, "
            f"–≥—Ä—É–ø–ø–æ–≤—ã—Ö, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∏ –¥—Ä—É–≥–∏—Ö —Ç—É—Ä–æ–≤!</b>\n\n"
            f"<i>–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ø–æ–ª–µ–∑–Ω—ã–µ –∫–∞–Ω–∞–ª—ã ¬´–ú–∞—Ä–∫–µ—Ç –°–ª–µ—Ç–∞—Ç—å¬ª:</i>\n\n"
            f"1Ô∏è‚É£<i><a href='https://t.me/marketsletat_tours'>–ó–¥–µ—Å—å –±—É–¥–µ–º –¥–µ–ª–∏—Ç—å—Å—è —Å –≤–∞–º–∏ –Ω–∞—à–∏–º–∏ –∞–∫—Ü–∏–æ–Ω–Ω—ã–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –∏ –≥–æ—Ä—è—á–∏–º–∏üî• –ø–æ–¥–±–æ—Ä–∫–∞–º–∏</a></i>\n"
            f"2Ô∏è‚É£<i><a href='https://t.me/marketsletatspb'>–¢—É—Ç –Ω–æ–≤–æ—Å—Ç–∏ —Ç—É—Ä–∏–∑–º–∞, –Ω–∞—à–∏ —Å—á–∞—Å—Ç–ª–∏–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø–æ—Å—Ç—ãüó∫Ô∏è</a></i>\n"
            f"<b>–ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –Ω–∞—Å –ø–æ–¥–ø–∏—Å–∫–æ–π –∏ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏, –ø–∏—Å–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏!</b>\n\n"
            f"<i>–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —É–¥–æ–±–Ω—ã–π –∫–∞–Ω–∞–ª —Å–≤—è–∑–∏:</i>\n\n"
            f"<a href='https://market-sletat.ru/'>–°–∞–π—Ç</a>\n"
            f"<a href='https://vk.com/officsletat'>–í–ö–æ–Ω—Ç–∞–∫—Ç–µ</a>\n"
            f"<a href='https://instagram.com/marketsletat?igshid=MzRlODBiNWFlZA=='>In$tagr@m</a>",
            parse_mode="HTML", disable_web_page_preview=True, reply_markup=keyboard,
        )
        user = f"{message.from_user.username}"
        await bot.send_message(chat_id=-1002060096138, text=f"–ò–º—è: {data['name_alt']}\n"
                                                            f"–ù–æ–º–µ—Ä: {data['numbers_alt']}\n"
                                                            f"–¢–ì username: @{user}"
                               )
    else:
        await message.answer(
            "‚ùóÔ∏è–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã. –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ 8—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö"
        )


@router.message(Form.name)
async def process_name(message: Message, state: FSMContext, ) -> None:
    await state.set_state(Form.depart_city)
    await state.update_data(name=message.text)
    data = await state.get_data()
    await message.answer(
        f"{message.text}, –∏–∑ –∫–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤—ã–ª–µ—Ç?",
    )
    # global name_introduced
    # name_introduced = f"–ò–º—è: {message.text}"


@router.message(Form.depart_city)
async def process_depart_city(message: Message, state: FSMContext) -> None:
    await state.set_state(Form.resort)
    await state.update_data(depart_city=message.text)
    data = await state.get_data()
    await message.answer(
        "–ö–∞–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –æ—Ç–¥—ã—Ö–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ? –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∏–∂–µ –≤—Å–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å –≤–∞—Ä–∏–∞–Ω—Ç—ãüñãÔ∏è\n\n"
        "–ù–∞—à–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –ø–æ —Ç—É—Ä–∞–º –≤–∫–ª—é—á–∞—Ç –≤ –ø–æ–¥–±–æ—Ä–∫—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ –∫–∞–∂–¥–æ–º—É!)"
    )
    # global depart_city_introduced
    # depart_city_introduced = f"–ì–æ—Ä–æ–¥ –≤—ã–ª–µ—Ç–∞: {message.text}"


@router.message(Form.resort)
async def process_resort(message: Message, state: FSMContext) -> None:
    await state.set_state(Form.quan)
    await state.update_data(resort=message.text)
    data = await state.get_data()
    await message.answer(
        "–û—Ç–ª–∏—á–Ω–æ!) –°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤—è—Ç—Å—è –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ?üë©üèªüßëüèº‚Äçü¶± –ë—É–¥—É—Ç –ª–∏ —Å –≤–∞–º–∏ –¥–µ—Ç–∏, —Å–∫–æ–ª—å–∫–æ?üëßüèº"
    )
    # global resort_introduced
    # resort_introduced = f"–ö—É—Ä–æ—Ä—Ç: {message.text}"


@router.message(Form.quan)
async def process_dates(message: Message, state: FSMContext) -> None:
    await state.set_state(Form.dates)
    await state.update_data(quan=message.text)
    data = await state.get_data()
    await message.answer(
        f"{data['name']}, —É–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ –∫–∞–∫–∏–µ –¥–∞—Ç—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ?üóìÔ∏è"
    )
    # global quan_introduced
    # quan_introduced = f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫: {message.text}"


@router.message(Form.dates)
async def process_quan(message: Message, state: FSMContext) -> None:
    await state.set_state(Form.nights)
    await state.update_data(dates=message.text)
    data = await state.get_data()
    await message.answer(
        "–°–∫–æ–ª—å–∫–æ –Ω–æ—á–µ–π –∑–∞–∫–ª–∞–¥—ã–≤–∞–µ—Ç–µ –Ω–∞ –æ—Ç–ø—É—Å–∫?"
    )
    # global dates_introduced
    # dates_introduced = f"–î–∞—Ç—ã –ø–æ–µ–∑–¥–∫–∏: {message.text}"


@router.message(Form.nights)
async def process_nights(message: Message, state: FSMContext) -> None:
    await state.set_state(Form.budget)
    await state.update_data(nights=message.text)
    data = await state.get_data()
    await message.answer(
        f"–°–ø–∞—Å–∏–±–æ! –£—Ç–æ—á–Ω–∏—Ç–µ —Å–≤–æ–π –±—é–¥–∂–µ—Ç –Ω–∞ –ø–æ–µ–∑–¥–∫—Éüíµ"
    )


# global nights_introduced
# nights_introduced = f"–ö–æ–ª–∏—á–µ—Ç—Å–≤–æ –Ω–æ—á–µ–π: {message.text}"


@router.message(Form.budget)
async def process_budget(message: types.Message, state: FSMContext) -> None:
    await state.set_state(Form.messanger)
    await state.update_data(budget=message.text)
    data = await state.get_data()
    kb = [
        [
            types.KeyboardButton(text="–ü–æ–∑–≤–æ–Ω–∏—Ç—åüì≤"),
            types.KeyboardButton(text="WhatsAppüí¨"),
            types.KeyboardButton(text="Telegramüí¨")

        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True,
    )
    await message.answer(f"–ö–∞–∫–∏–º —Å–ø–æ—Å–æ–±–æ–º –≤–∞–º –±—ã–ª–æ –±—ã —É–¥–æ–±–Ω–µ–µ –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–¥–±–æ—Ä–∫—É –æ—Ç –Ω–∞—à–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤?",
                         reply_markup=keyboard)
    # global budget_introduced
    # budget_introduced = f"–ë—é–¥–∂–µ—Ç: {message.text}"


@router.message(Form.messanger)
async def process_messanger(message: Message, state: FSMContext) -> None:
    await state.update_data(messanger=message.text)
    data = await state.get_data()
    if data['messanger'] == "–ü–æ–∑–≤–æ–Ω–∏—Ç—åüì≤" or data['messanger'] == "WhatsAppüí¨" or data['messanger'] == "Telegramüí¨":
        await state.set_state(Form.numbers)
        await message.answer(f"–î–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏ –Ω–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞üì≤\n\n"
                             f"–ù–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –Ω–∏–∂–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤ —Ñ–æ—Ä–º–∞—Ç–µ 8—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö")
        # global messanger_introduced
        # messanger_introduced = f"–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏: {message.text}"
    else:
        kb = [
            [
                types.KeyboardButton(text="–ü–æ–∑–≤–æ–Ω–∏—Ç—åüì≤"),
                types.KeyboardButton(text="WhatsAppüí¨"),
                types.KeyboardButton(text="Telegramüí¨")
            ],
        ]
        keyboard = types.ReplyKeyboardMarkup(
            keyboard=kb,
            resize_keyboard=True,
            one_time_keyboard=True
        )
        await message.answer(f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤üôèüèº", reply_markup=keyboard)


@router.message(Form.numbers)
async def process_numbers(message: Message, state: FSMContext, bot: Bot) -> None:
    await state.update_data(numbers=message.text)
    data = await state.get_data()
    if data['numbers'].isdigit() and len(data['numbers']) == 11:
        inline_start = InlineKeyboardButton(
            text="–û—Å—Ç–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω—É –∑–∞—è–≤–∫—É",
            callback_data="inline_start_pressed"
        )
        inline_manager = InlineKeyboardButton(
            text="–°–≤—è–∑–∞—Ç—Å—è —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",
            callback_data="inline_manager_pressed"
        )
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [inline_start],
            [inline_manager]
        ])
        await message.answer(
            f"–ú—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å!\n"
            f"–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã, –º—ã —É–∂–µ –≤–∑—è–ª–∏ –µ–µ –≤ —Ä–∞–±–æ—Ç—Éüíô\n\n"
            f"–ö–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞—à —ç–∫—Å–ø–µ—Ä—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–¥–±–æ—Ä–∫—É –¥–ª—è –≤–∞—Å, –æ–Ω —Å–≤—è–∂–µ—Ç—Å—è —É–∫–∞–∑–∞–Ω–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–ºüòå"
        )
        await message.answer(
            f"–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æüõ´\n\n"
            f"–ú—ã ‚Äì –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –∫–æ–ª–ª–µ–≥, –∞ –ª—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–∞—Ä–∞—é—Ç—Å—è "
            f"<i>—Å–¥–µ–ª–∞—Ç—å –∂–∏–∑–Ω—å –Ω–∞—à–∏—Ö —Ç—É—Ä–∏—Å—Ç–æ–≤ –±–æ–ª–µ–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π. "
            f"–í—ã –º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è –∏ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞—Ç—å –∑–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–¥—ã—Ö))</i> "
            f"–ü–æ—ç—Ç–æ–º—É –º—ã –≥–æ–≤–æ—Ä–∏–º, —á—Ç–æ <b>–≤–∞—à –æ—Ç–¥—ã—Ö –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–µ —Å —Å–∞–º–æ–ª–µ—Ç–∞, –∞ —Å –Ω–∞—Å!</b>\n\n"
            f"–í—Å–µ –≤ –æ–¥–Ω–æ–º –æ–∫–Ω–µ ‚Äî –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–µ —Ç–æ–ª—å–∫–æ —Å –ø–∞–∫–µ—Ç–Ω—ã–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏, –Ω–æ –∏ <u>–æ—Ñ–æ—Ä–º–ª—è–µ–º –≤–∏–∑—ã –ø–æ–¥ —Ç—É—Ä—ã</u>, "
            f"–ø–æ–º–æ–≥–∞–µ–º —Å <u>–ø–æ–∫—É–ø–∫–æ–π –æ—Ç–¥–µ–ª—å–Ω–æ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤</u>, <u>–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è</u>. "
            f"–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º <b>VIP-—Å–µ—Ä–≤–∏—Å</b>‚≠êÔ∏è –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é "
            f"<b>–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö, –≥—Ä—É–ø–ø–æ–≤—ã—Ö, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∏ –¥—Ä—É–≥–∏—Ö —Ç—É—Ä–æ–≤!</b>\n\n"
            f"<i>–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ø–æ–ª–µ–∑–Ω—ã–µ –∫–∞–Ω–∞–ª—ã ¬´–ú–∞—Ä–∫–µ—Ç –°–ª–µ—Ç–∞—Ç—å¬ª:</i>\n\n"
            f"1Ô∏è‚É£<i><a href='https://t.me/marketsletat_tours'>–ó–¥–µ—Å—å –±—É–¥–µ–º –¥–µ–ª–∏—Ç—å—Å—è —Å –≤–∞–º–∏ –Ω–∞—à–∏–º–∏ –∞–∫—Ü–∏–æ–Ω–Ω—ã–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –∏ –≥–æ—Ä—è—á–∏–º–∏üî• –ø–æ–¥–±–æ—Ä–∫–∞–º–∏</a></i>\n"
            f"2Ô∏è‚É£<i><a href='https://t.me/marketsletatspb'>–¢—É—Ç –Ω–æ–≤–æ—Å—Ç–∏ —Ç—É—Ä–∏–∑–º–∞, –Ω–∞—à–∏ —Å—á–∞—Å—Ç–ª–∏–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø–æ—Å—Ç—ãüó∫Ô∏è</a></i>\n"
            f"<b>–ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –Ω–∞—Å –ø–æ–¥–ø–∏—Å–∫–æ–π –∏ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏, –ø–∏—Å–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏!</b>\n\n"
            f"<i>–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —É–¥–æ–±–Ω—ã–π –∫–∞–Ω–∞–ª —Å–≤—è–∑–∏:</i>\n\n"
            f"<a href='https://market-sletat.ru/'>–°–∞–π—Ç</a>\n"
            f"<a href='https://vk.com/officsletat'>–í–ö–æ–Ω—Ç–∞–∫—Ç–µ</a>\n"
            f"<a href='https://instagram.com/marketsletat?igshid=MzRlODBiNWFlZA=='>In$tagr@m</a>",
            parse_mode="HTML", disable_web_page_preview=True, reply_markup=keyboard,
        )
        # print(await bot.get_webhook_info())
        # await state.set_state(Form.end)
        user = f"{message.from_user.username}"
        # global numbers_introduced
        # numbers_introduced = f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {message.text}"
        await bot.send_message(chat_id=-1002060096138,
                               text=f"–ò–º—è: {data['name']}\n"  # ID 443453297 –º–æ–π,  –∫–∞–Ω–∞–ª -1002060096138
                                    f"–ì–æ—Ä–æ–¥ –≤—ã–ª–µ—Ç–∞: {data['depart_city']}\n"
                                    f"–ö—É—Ä–æ—Ä—Ç: {data['resort']}\n"
                                    f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫: {data['quan']}\n"
                                    f"–î–∞—Ç—ã –ø–æ–µ–∑–¥–∫–∏: {data['dates']}\n"
                                    f"–ö–æ–ª–∏—á–µ—Ç—Å–≤–æ –Ω–æ—á–µ–π: {data['nights']}\n"
                                    f"–ë—é–¥–∂–µ—Ç: {data['budget']}\n"
                                    f"–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏: {data['messanger']}\n"
                                    f"–¢–ì username: @{user}\n"
                                    f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data['numbers']}"
                               )
    else:
        await message.answer(
            f"‚ùóÔ∏è–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã. –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ 8—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö")
